# Copyright 2023 franck fesse
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: "2010-09-09"

Description: Create an elastic cache instance.

Parameters:
  MyVpc:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Elastic cache  should be deployed to
  MySubnets:
    Type: List<AWS::EC2::Subnet::Id> 
    Description: Choose which Subnet the Elastic cache should be deployed to 

Resources:
  MyElasticacheInstance:
    Type: AWS::ElastiCache::CacheCluster
    Properties:    
      Engine: redis
      CacheNodeType: cache.t3.micro
      NumCacheNodes: '1'
      CacheSubnetGroupName: !Ref SubnetGroup
      VpcSecurityGroupIds:
        - !GetAtt 
          - ElasticacheSecurityGroup
          - GroupId

  ElasticacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Elastic cache security group" # Required
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVpc  
   
  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: My Cache Subnet Group
      SubnetIds: !Ref MySubnets



Outputs:
  DatabaseEndpoint:
    Description: "Connection endpoint for the database"
    Value: !GetAtt MyElasticacheInstance.RedisEndpoint.Address            

