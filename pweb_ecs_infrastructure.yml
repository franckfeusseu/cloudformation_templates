# Copyright 2023 franck fesse
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Description: |
  cloudformation template for the infrastructure of pweb application that consist: - RDS Database. - Elasticache cluster  - S3 bucket  - Cloudfront distribution - Autoscaling Group  - Elastic Loadbalancer
Parameters:
  ClusterName:
    Type: String
    Description: Enter your cluster name
  MyVpc:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application should be deployed to
  ApplicationDesiredCount:
    Type: Number
    Description: Desired EC2 instance count
  ApplicationSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Target subnets for Ec2 instances
  PwebAmiId:
    Description: Region specific image from the Parameter Store
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  PwebInstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.micro
      - t3.small
      - t3.meduim
      - t3.large
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: ECS instances's key pair 
Resources:
  PwebCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
  PwebTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: pweb-django-server
          Image: 570146545412.dkr.ecr.eu-west-2.amazonaws.com/tastyporns:latest
          Essential: true
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Sub /${AWS::StackName}/ecs/tastyporns-django
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: DJANGO_SETTINGS_MODULE
              Value: config.settings.production
            - Name: ALLOWED_HOSTS
              Value: ['*']
            - Name: REDIS_DBS
              Value: 0
            - Name: CELERY_BEAT_SCHEDULER
              Value: django_celery_beat.schedulers.DatabaseScheduler
            - Name: CELERY_SETTINGS
              Value: config.settings.production
          Secrets:
            - Name: SECRET_KEY
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SECRET_KEY
            - Name: DB_NAME
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBName
            - Name: DB_USER
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBUsername
            - Name: DB_PASSWORD
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBPassword
            - Name: DB_HOST
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DB_HOST
            - Name: AWS_ACCESS_KEY_ID
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ACCESS_KEY_ID
            - Name: AWS_SECRET_ACCESS_KEY
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SECRET_ACCESS_KEY
            - Name: AWS_STORAGE_BUCKET_NAME
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/STORAGE_BUCKET_NAME
            - Name: AWS_S3_CUSTOM_DOMAIN
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/S3_CUSTOM_DOMAIN
            - Name: REDIS_HOST
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/REDIS_HOST
        - Name: pweb-celery-worker
          Image: 570146545412.dkr.ecr.eu-west-2.amazonaws.com/tastyporns:latest
          Essential: true
          Command:
            - celery -A config worker -l INFO
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Sub /${AWS::StackName}/ecs/tastyporns-celery-worker
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: DJANGO_SETTINGS_MODULE
              Value: config.settings.production
            - Name: ALLOWED_HOSTS
              Value: '*'
            - Name: REDIS_DB
              Value: 0
            - Name: CELERY_BEAT_SCHEDULER
              Value: django_celery_beat.schedulers.DatabaseScheduler
            - Name: CELERY_SETTINGS
              Value: config.settings.production
          Secrets:
            - Name: SECRET_KEY
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SECRET_KEY
            - Name: DB_Name
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBName
            - Name: DB_USER
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBUsername
            - Name: DB_PASSWORD
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBPassword
            - Name: DB_HOST
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DB_HOST
            - Name: AWS_ACCESS_KEY_ID
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ACCESS_KEY_ID
            - Name: AWS_SECRET_ACCESS_KEY
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SECRET_ACCESS_KEY
            - Name: AWS_STORAGE_BUCKET_NAME
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/STORAGE_BUCKET_NAME
            - Name: AWS_S3_CUSTOM_DOMAIN
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/S3_CUSTOM_DOMAIN
            - Name: REDIS_HOST
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/REDIS_HOST
        - Name: pweb-celery-beat
          Image: 570146545412.dkr.ecr.eu-west-2.amazonaws.com/tastyporns:latest
          Essential: true
          Command:
            - celery -A config beat -l info --scheduler
              django_celery_beat.schedulers:DatabaseScheduler
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Sub /${AWS::StackName}/ecs/tastyporns-celery-beat
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: DJANGO_SETTINGS_MODULE
              Value: config.settings.production
            - Name: ALLOWED_HOSTS
              Value: '*'
            - Name: REDIS_DB
              Value: 0
            - Name: CELERY_BEAT_SCHEDULER
              Value: django_celery_beat.schedulers.DatabaseScheduler
            - Name: CELERY_SETTINGS
              Value: config.settings.production
          Secrets:
            - Name: SECRET_KEY
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SECRET_KEY
            - Name: DB_Name
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBName
            - Name: DB_USER
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBUsername
            - Name: DB_PASSWORD
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DBPassword
            - Name: DB_HOST
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DB_HOST
            - Name: AWS_ACCESS_KEY_ID
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ACCESS_KEY_ID
            - Name: AWS_SECRET_ACCESS_KEY
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SECRET_ACCESS_KEY
            - Name: AWS_STORAGE_BUCKET_NAME
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/STORAGE_BUCKET_NAME
            - Name: AWS_S3_CUSTOM_DOMAIN
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/S3_CUSTOM_DOMAIN
            - Name: REDIS_HOST
              ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/REDIS_HOST
      Cpu: 512
      ExecutionRoleArn: arn:aws:iam::570146545412:role/ecsTaskExecutionRole
      Family: tastyporns
      Memory: 512
      NetworkMode: bridge
      Tags:
        - Key: Environment
          Value: Dev
      TaskRoleArn: arn:aws:iam::570146545412:role/ecsTaskExecutionRole
      
  PwebAutoscalingLauchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LauchTemplateName: !Sub ${AWS::StackName}-lauch-template
      LauchTemplateData:
        ImageId: !Ref PwebAmiId
        InstanceType: !Ref PwebInstanceType
        KeyName: !Ref KeyName
        SecurityGroups: null
        IamInstanceProfile: null
  PwebAutoscaling:
    Type: AWS::AutoScaling::AutoscalingGroup
    Properties:
      LauchTemplate:
        LauchTemplateId: !Ref PwebAutoscalingLauchTemplate
        Version: !GetAtt PwebAutoscalingLauchTemplate.LatestVersionNumber
      DesiredCapacity: !Ref ApplicationDesiredCount
      LaunchConfigurationName: !Ref PwebAutoscalingLauchConfiguration
      MaxSize: 4
      MinSize: 1
      VPCZoneIdentifier: !Ref ApplicationSubnets
 # Pweb elastic load balancer     
  PwebALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes: 
        - Key: idle_timeout.timeout_seconds
          Value : 30
      Name: !Sub ${AWS::StackName}-elastic-loadbalancer
      Scheme: internet-facing
      SecurityGroups: !Ref PwebALBSecurityGroup
      Subnets: !Ref ApplicationSubnets
  # Pweb elastic load balancer security group
  PwebALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Pweb Application Load Balancer Security Group
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  
      Tags: 
        - Key: Name
          Value: !Sub ${AWS::StackName}-alb
      VpcId: !Ref MyVpc
    

Outputs: 
  PublicUrl:
    Description: Public DNS name of Application Load Balancer
    Value: !Sub ${PwebALB.DNSName}